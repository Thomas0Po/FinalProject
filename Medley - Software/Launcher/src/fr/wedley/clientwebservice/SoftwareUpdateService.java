
package fr.wedley.clientwebservice;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SoftwareUpdateService", targetNamespace = "http://webservices.wedley.fr/", wsdlLocation = "http://163.5.84.240:9898/SoftwareUpdate?wsdl")
public class SoftwareUpdateService
    extends Service
{

    private final static URL SOFTWAREUPDATESERVICE_WSDL_LOCATION;
    private final static WebServiceException SOFTWAREUPDATESERVICE_EXCEPTION;
    private final static QName SOFTWAREUPDATESERVICE_QNAME = new QName("http://webservices.wedley.fr/", "SoftwareUpdateService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://163.5.84.240:9898/SoftwareUpdate?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SOFTWAREUPDATESERVICE_WSDL_LOCATION = url;
        SOFTWAREUPDATESERVICE_EXCEPTION = e;
    }

    public SoftwareUpdateService() {
        super(__getWsdlLocation(), SOFTWAREUPDATESERVICE_QNAME);
    }


    /**
     * 
     * @return
     *     returns SoftwareUpdate
     */
    @WebEndpoint(name = "SoftwareUpdatePort")
    public SoftwareUpdate getSoftwareUpdatePort() {
        return super.getPort(new QName("http://webservices.wedley.fr/", "SoftwareUpdatePort"), SoftwareUpdate.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SoftwareUpdate
     */
    @WebEndpoint(name = "SoftwareUpdatePort")
    public SoftwareUpdate getSoftwareUpdatePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservices.wedley.fr/", "SoftwareUpdatePort"), SoftwareUpdate.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SOFTWAREUPDATESERVICE_EXCEPTION!= null) {
            throw SOFTWAREUPDATESERVICE_EXCEPTION;
        }
        return SOFTWAREUPDATESERVICE_WSDL_LOCATION;
    }

}
